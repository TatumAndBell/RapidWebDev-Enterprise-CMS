<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FileCategoryCannotBeEmpty" xml:space="preserve">
    <value>FileManagementControl控件的FileCategory属性不能为空。</value>
  </data>
  <data name="FileCategoryQueryStringParameterNotFound" xml:space="preserve">
    <value>HTTP请求中未发现参数"category"。</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>文件在服务器中不存在。</value>
  </data>
  <data name="FileRemoveConfirmationMessage" xml:space="preserve">
    <value>你确认删除该文件吗？</value>
  </data>
  <data name="FileUploadDialogTitle" xml:space="preserve">
    <value>文件上传对话框</value>
  </data>
  <data name="FileUploadToolTip" xml:space="preserve">
    <value>点击下列按钮来选择上传文件。</value>
  </data>
  <data name="InvalidExternalObjectId" xml:space="preserve">
    <value>关联的外部对象ID无效。</value>
  </data>
  <data name="InvalidFileDownloadUri" xml:space="preserve">
    <value>下载文件的Uri无效，请参照模板"FileDownload.svc/fileid/{fileid}"。</value>
  </data>
  <data name="InvalidFileId" xml:space="preserve">
    <value>无效的文件ID.</value>
  </data>
  <data name="InvalidFileSharedPath" xml:space="preserve">
    <value>FileStorageApi的属性"FileSharedPath"未配置。</value>
  </data>
  <data name="InvalidQueryStringParameterExt" xml:space="preserve">
    <value>HTTP请求参数"ext"未指定。</value>
  </data>
  <data name="NoPermissionToDownloadFiles" xml:space="preserve">
    <value>你无权下载文件。</value>
  </data>
  <data name="NoPermissionToUploadFiles" xml:space="preserve">
    <value>你无权上传文件。</value>
  </data>
  <data name="ShowUploadDialogButtonText" xml:space="preserve">
    <value>上传更多文件</value>
  </data>
  <data name="UnknownError" xml:space="preserve">
    <value>服务器发生未知错误。</value>
  </data>
  <data name="UnreadableFileStream" xml:space="preserve">
    <value>上传文件流不可读取。</value>
  </data>
  <data name="UploadButtonText" xml:space="preserve">
    <value>上传</value>
  </data>
  <data name="UploadCancelButtonText" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="UploadingFileNotFound" xml:space="preserve">
    <value>未发现上传文件。</value>
  </data>
</root>