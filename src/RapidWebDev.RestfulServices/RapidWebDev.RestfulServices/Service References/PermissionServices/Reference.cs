//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RapidWebDev.RestfulServices.PermissionServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="IdCollection", Namespace="http://www.rapidwebdev.org/platform", ItemName="Id")]
    [System.SerializableAttribute()]
    public class IdCollection : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.rapidwebdev.org/platform", ConfigurationName="PermissionServices.PermissionService")]
    public interface PermissionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/SetRolePermissionsByJson", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/SetRolePermissionsByJsonRes" +
            "ponse")]
        void SetRolePermissionsByJson(string roleId, RapidWebDev.RestfulServices.PermissionServices.IdCollection permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/SetRolePermissionsByXml", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/SetRolePermissionsByXmlResp" +
            "onse")]
        void SetRolePermissionsByXml(string roleId, RapidWebDev.RestfulServices.PermissionServices.IdCollection permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/SetUserPermissionsByJson", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/SetUserPermissionsByJsonRes" +
            "ponse")]
        void SetUserPermissionsByJson(string userId, RapidWebDev.RestfulServices.PermissionServices.IdCollection permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/SetUserPermissionsByXml", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/SetUserPermissionsByXmlResp" +
            "onse")]
        void SetUserPermissionsByXml(string userId, RapidWebDev.RestfulServices.PermissionServices.IdCollection permissions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/FindUserPermissionsByJson", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/FindUserPermissionsByJsonRe" +
            "sponse")]
        string[] FindUserPermissionsByJson(string userId, string explicitOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/FindUserPermissionsByXml", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/FindUserPermissionsByXmlRes" +
            "ponse")]
        string[] FindUserPermissionsByXml(string userId, string explicitOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/FindRolePermissionsByJson", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/FindRolePermissionsByJsonRe" +
            "sponse")]
        string[] FindRolePermissionsByJson(string roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/FindRolePermissionsByXml", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/FindRolePermissionsByXmlRes" +
            "ponse")]
        string[] FindRolePermissionsByXml(string roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/DoesTheUserHasPermissionJso" +
            "n", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/DoesTheUserHasPermissionJso" +
            "nResponse")]
        bool DoesTheUserHasPermissionJson(string userId, string permissionValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/DoesTheUserHasPermissionXml" +
            "", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/DoesTheUserHasPermissionXml" +
            "Response")]
        bool DoesTheUserHasPermissionXml(string userId, string permissionValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/DoesTheCurrentUserHavePermi" +
            "ssionJson", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/DoesTheCurrentUserHavePermi" +
            "ssionJsonResponse")]
        bool DoesTheCurrentUserHavePermissionJson(string permissionValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.rapidwebdev.org/platform/PermissionService/DoesTheCurrentUserHavePermi" +
            "ssionXml", ReplyAction="http://www.rapidwebdev.org/platform/PermissionService/DoesTheCurrentUserHavePermi" +
            "ssionXmlResponse")]
        bool DoesTheCurrentUserHavePermissionXml(string permissionValue);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface PermissionServiceChannel : RapidWebDev.RestfulServices.PermissionServices.PermissionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class PermissionServiceClient : System.ServiceModel.ClientBase<RapidWebDev.RestfulServices.PermissionServices.PermissionService>, RapidWebDev.RestfulServices.PermissionServices.PermissionService {
        
        public PermissionServiceClient() {
        }
        
        public PermissionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PermissionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermissionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermissionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SetRolePermissionsByJson(string roleId, RapidWebDev.RestfulServices.PermissionServices.IdCollection permissions) {
            base.Channel.SetRolePermissionsByJson(roleId, permissions);
        }
        
        public void SetRolePermissionsByXml(string roleId, RapidWebDev.RestfulServices.PermissionServices.IdCollection permissions) {
            base.Channel.SetRolePermissionsByXml(roleId, permissions);
        }
        
        public void SetUserPermissionsByJson(string userId, RapidWebDev.RestfulServices.PermissionServices.IdCollection permissions) {
            base.Channel.SetUserPermissionsByJson(userId, permissions);
        }
        
        public void SetUserPermissionsByXml(string userId, RapidWebDev.RestfulServices.PermissionServices.IdCollection permissions) {
            base.Channel.SetUserPermissionsByXml(userId, permissions);
        }
        
        public string[] FindUserPermissionsByJson(string userId, string explicitOnly) {
            return base.Channel.FindUserPermissionsByJson(userId, explicitOnly);
        }
        
        public string[] FindUserPermissionsByXml(string userId, string explicitOnly) {
            return base.Channel.FindUserPermissionsByXml(userId, explicitOnly);
        }
        
        public string[] FindRolePermissionsByJson(string roleId) {
            return base.Channel.FindRolePermissionsByJson(roleId);
        }
        
        public string[] FindRolePermissionsByXml(string roleId) {
            return base.Channel.FindRolePermissionsByXml(roleId);
        }
        
        public bool DoesTheUserHasPermissionJson(string userId, string permissionValue) {
            return base.Channel.DoesTheUserHasPermissionJson(userId, permissionValue);
        }
        
        public bool DoesTheUserHasPermissionXml(string userId, string permissionValue) {
            return base.Channel.DoesTheUserHasPermissionXml(userId, permissionValue);
        }
        
        public bool DoesTheCurrentUserHavePermissionJson(string permissionValue) {
            return base.Channel.DoesTheCurrentUserHavePermissionJson(permissionValue);
        }
        
        public bool DoesTheCurrentUserHavePermissionXml(string permissionValue) {
            return base.Channel.DoesTheCurrentUserHavePermissionXml(permissionValue);
        }
    }
}
