//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RapidWebDev.ExtensionModel.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RapidWebDev.ExtensionModel.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The config file {0} of extension type is invalid!.
        /// </summary>
        internal static string ConfigFileOfExtensionTypeIsInvalid {
            get {
                return ResourceManager.GetString("ConfigFileOfExtensionTypeIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to contains.
        /// </summary>
        internal static string Contains {
            get {
                return ResourceManager.GetString("Contains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extension type {0} has existed..
        /// </summary>
        internal static string ExtensionTypeExist {
            get {
                return ResourceManager.GetString("ExtensionTypeExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import extension type from config file {0} automatically at {1}.
        /// </summary>
        internal static string ExtensionTypeInputFromConfigFile {
            get {
                return ResourceManager.GetString("ExtensionTypeInputFromConfigFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field {0} doesn&apos;t support value type {1}..
        /// </summary>
        internal static string FieldNotSupportSpecifiedValueType {
            get {
                return ResourceManager.GetString("FieldNotSupportSpecifiedValueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of field {0} cannot be null..
        /// </summary>
        internal static string FieldValueCannotBeNull {
            get {
                return ResourceManager.GetString("FieldValueCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of field {0} is greater than maximal length {1}..
        /// </summary>
        internal static string FieldValueGreaterThanMaximalLength {
            get {
                return ResourceManager.GetString("FieldValueGreaterThanMaximalLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of field {0} is greater than the maximal value {1}..
        /// </summary>
        internal static string FieldValueGreaterThanMaximalValue {
            get {
                return ResourceManager.GetString("FieldValueGreaterThanMaximalValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of field {0} is less than the minimal value {1}..
        /// </summary>
        internal static string FieldValueLessThanMinimalValue {
            get {
                return ResourceManager.GetString("FieldValueLessThanMinimalValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of field {0} is less than minimal length {1}..
        /// </summary>
        internal static string FieldValueLessThanMinimumLength {
            get {
                return ResourceManager.GetString("FieldValueLessThanMinimumLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of field {0} doesn&apos;t match the format {1}..
        /// </summary>
        internal static string FieldValueNotAnswerForPreconcertedFormat {
            get {
                return ResourceManager.GetString("FieldValueNotAnswerForPreconcertedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parent ID {0} of specified extension type is invalid!.
        /// </summary>
        internal static string IDofSpecifiedParentExtensionTypeIsInvalid {
            get {
                return ResourceManager.GetString("IDofSpecifiedParentExtensionTypeIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of field {0} is invalid..
        /// </summary>
        internal static string InvalidValueForSpecifiedField {
            get {
                return ResourceManager.GetString("InvalidValueForSpecifiedField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hierarchy node value {0} isn&apos;t defined in metadata..
        /// </summary>
        internal static string NoteValueNotDefinedInHierarchy {
            get {
                return ResourceManager.GetString("NoteValueNotDefinedInHierarchy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataTimeValue is set to customed, but there is no specified date..
        /// </summary>
        internal static string NotSpecifiedDate {
            get {
                return ResourceManager.GetString("NotSpecifiedDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {0} only supports single selection..
        /// </summary>
        internal static string OnlySupportSingleSelectForSpecifiedField {
            get {
                return ResourceManager.GetString("OnlySupportSingleSelectForSpecifiedField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option value {0} is not defined in metadata..
        /// </summary>
        internal static string OptionNotDefined {
            get {
                return ResourceManager.GetString("OptionNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This extension type cannot be deleted due to it&apos;s been referenced as a parent..
        /// </summary>
        internal static string SpecifiedExtensionTypeHasBeenReferenced {
            get {
                return ResourceManager.GetString("SpecifiedExtensionTypeHasBeenReferenced", resourceCulture);
            }
        }
    }
}
