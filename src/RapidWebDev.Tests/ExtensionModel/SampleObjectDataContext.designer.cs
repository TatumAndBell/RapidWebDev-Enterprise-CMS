#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RapidWebDev.Tests.ExtensionModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Application.Framework")]
	public partial class SampleObjectDataContext : RapidWebDev.ExtensionModel.Linq.ExtensionDataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSampleObject(SampleObject instance);
    partial void UpdateSampleObject(SampleObject instance);
    partial void DeleteSampleObject(SampleObject instance);
    #endregion
		
		public SampleObjectDataContext() : 
				base("Data Source=.\\sqlexpress;Initial Catalog=Application.Framework;Integrated Securit" +
						"y=True", mappingSource)
		{
			OnCreated();
		}
		
		public SampleObjectDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleObjectDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleObjectDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SampleObjectDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SampleObject> SampleObjects
		{
			get
			{
				return this.GetTable<SampleObject>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ext_SampleObjects")]
	public partial class SampleObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ObjectId;
		
		private string _Name;
		
		private System.Guid _ExtensionDataTypeId;
		
		private string _ExtensionData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectIdChanging(System.Guid value);
    partial void OnObjectIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnExtensionDataTypeIdChanging(System.Guid value);
    partial void OnExtensionDataTypeIdChanged();
    partial void OnExtensionDataChanging(string value);
    partial void OnExtensionDataChanged();
    #endregion
		
		public SampleObject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionDataTypeId", DbType="UniqueIdentifier NOT NULL")]
		public override System.Guid ExtensionDataTypeId
		{
			get
			{
				return this._ExtensionDataTypeId;
			}
			set
			{
				if ((this._ExtensionDataTypeId != value))
				{
					this.OnExtensionDataTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExtensionDataTypeId = value;
					this.SendPropertyChanged("ExtensionDataTypeId");
					this.OnExtensionDataTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionData", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public override string ExtensionData
		{
			get
			{
				return this._ExtensionData;
			}
			set
			{
				if ((this._ExtensionData != value))
				{
					this.OnExtensionDataChanging(value);
					this.SendPropertyChanging();
					this._ExtensionData = value;
					this.SendPropertyChanged("ExtensionData");
					this.OnExtensionDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
